/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.benzinga.bzclient.models.operations;

import com.benzinga.bzclient.utils.Options;
import com.benzinga.bzclient.utils.RetryConfig;
import com.benzinga.bzclient.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class GetIncomeStatementV3RequestBuilder {

    private String symbols;
    private Optional<String> from = Optional.empty();
    private Optional<String> to = Optional.empty();
    private Optional<String> date = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetIncomeStatementV3 sdk;

    public GetIncomeStatementV3RequestBuilder(SDKMethodInterfaces.MethodCallGetIncomeStatementV3 sdk) {
        this.sdk = sdk;
    }

    public GetIncomeStatementV3RequestBuilder symbols(String symbols) {
        Utils.checkNotNull(symbols, "symbols");
        this.symbols = symbols;
        return this;
    }
                
    public GetIncomeStatementV3RequestBuilder from(String from) {
        Utils.checkNotNull(from, "from");
        this.from = Optional.of(from);
        return this;
    }

    public GetIncomeStatementV3RequestBuilder from(Optional<String> from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }
                
    public GetIncomeStatementV3RequestBuilder to(String to) {
        Utils.checkNotNull(to, "to");
        this.to = Optional.of(to);
        return this;
    }

    public GetIncomeStatementV3RequestBuilder to(Optional<String> to) {
        Utils.checkNotNull(to, "to");
        this.to = to;
        return this;
    }
                
    public GetIncomeStatementV3RequestBuilder date(String date) {
        Utils.checkNotNull(date, "date");
        this.date = Optional.of(date);
        return this;
    }

    public GetIncomeStatementV3RequestBuilder date(Optional<String> date) {
        Utils.checkNotNull(date, "date");
        this.date = date;
        return this;
    }
                
    public GetIncomeStatementV3RequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetIncomeStatementV3RequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public GetIncomeStatementV3Response call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.getIncomeStatement(
            symbols,
            from,
            to,
            date,
            options);
    }
}
