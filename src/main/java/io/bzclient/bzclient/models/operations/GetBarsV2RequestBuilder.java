/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.bzclient.bzclient.models.operations;

import io.bzclient.bzclient.utils.Options;
import io.bzclient.bzclient.utils.RetryConfig;
import io.bzclient.bzclient.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class GetBarsV2RequestBuilder {

    private String symbols;
    private String from;
    private Optional<String> to = Optional.empty();
    private Optional<String> interval = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetBarsV2 sdk;

    public GetBarsV2RequestBuilder(SDKMethodInterfaces.MethodCallGetBarsV2 sdk) {
        this.sdk = sdk;
    }

    public GetBarsV2RequestBuilder symbols(String symbols) {
        Utils.checkNotNull(symbols, "symbols");
        this.symbols = symbols;
        return this;
    }

    public GetBarsV2RequestBuilder from(String from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }
                
    public GetBarsV2RequestBuilder to(String to) {
        Utils.checkNotNull(to, "to");
        this.to = Optional.of(to);
        return this;
    }

    public GetBarsV2RequestBuilder to(Optional<String> to) {
        Utils.checkNotNull(to, "to");
        this.to = to;
        return this;
    }
                
    public GetBarsV2RequestBuilder interval(String interval) {
        Utils.checkNotNull(interval, "interval");
        this.interval = Optional.of(interval);
        return this;
    }

    public GetBarsV2RequestBuilder interval(Optional<String> interval) {
        Utils.checkNotNull(interval, "interval");
        this.interval = interval;
        return this;
    }
                
    public GetBarsV2RequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetBarsV2RequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public GetBarsV2Response call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.get(
            symbols,
            from,
            to,
            interval,
            options);
    }
}
