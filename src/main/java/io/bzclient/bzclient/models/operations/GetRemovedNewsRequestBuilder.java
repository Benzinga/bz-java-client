/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package io.bzclient.bzclient.models.operations;

import io.bzclient.bzclient.utils.Options;
import io.bzclient.bzclient.utils.RetryConfig;
import io.bzclient.bzclient.utils.Utils;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;

public class GetRemovedNewsRequestBuilder {

    private Optional<String> updatedSince = Optional.empty();
    private Optional<Long> pageSize = Optional.empty();
    private Optional<Long> page = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetRemovedNews sdk;

    public GetRemovedNewsRequestBuilder(SDKMethodInterfaces.MethodCallGetRemovedNews sdk) {
        this.sdk = sdk;
    }
                
    public GetRemovedNewsRequestBuilder updatedSince(String updatedSince) {
        Utils.checkNotNull(updatedSince, "updatedSince");
        this.updatedSince = Optional.of(updatedSince);
        return this;
    }

    public GetRemovedNewsRequestBuilder updatedSince(Optional<String> updatedSince) {
        Utils.checkNotNull(updatedSince, "updatedSince");
        this.updatedSince = updatedSince;
        return this;
    }
                
    public GetRemovedNewsRequestBuilder pageSize(long pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = Optional.of(pageSize);
        return this;
    }

    public GetRemovedNewsRequestBuilder pageSize(Optional<Long> pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = pageSize;
        return this;
    }
                
    public GetRemovedNewsRequestBuilder page(long page) {
        Utils.checkNotNull(page, "page");
        this.page = Optional.of(page);
        return this;
    }

    public GetRemovedNewsRequestBuilder page(Optional<Long> page) {
        Utils.checkNotNull(page, "page");
        this.page = page;
        return this;
    }
                
    public GetRemovedNewsRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetRemovedNewsRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public GetRemovedNewsResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.getRemoved(
            updatedSince,
            pageSize,
            page,
            options);
    }
}
